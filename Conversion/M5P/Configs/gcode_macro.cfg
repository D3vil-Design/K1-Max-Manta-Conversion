# K1
# CreateDate: 2023/03/21
[gcode_macro PRINT_START]
variable_bed_temp: 105
variable_extruder_temp: 245
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(105)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(245)|float %}
    M140 S{bed_temp}
    G28             
    RUN_SHELL_COMMAND CMD=KILL_CAMERA
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    RUN_SHELL_COMMAND CMD=START_CAMERA
    #SMART_PARK
    M190 S{bed_temp}
    M109 S{extruder_temp}
    #LINE_PURGE

[gcode_shell_command  KILL_CAMERA]
command: systemctl stop crowsnest

[gcode_shell_command  START_CAMERA]
command: systemctl start crowsnest

[gcode_macro END_PRINT]
gcode:  
  {% set th = printer.toolhead %}
  {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
  {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
  {% set z_safe = [th.position.z + 15, th.axis_maximum.z]|min %}
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-2.0 F3600 
  M220 S100
  M204 S500
  TURN_OFF_HEATERS
  G90                                      ; absolute positioning
  G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
  G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
  M107 S0

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(200) %}      #edit to your park position
    {% set y = params.Y|default(200) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro INPUTSHAPER]
gcode:
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
  G90
  G28
  {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max/2 %}
  {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max/2 %}
  G1 X{POSITION_X} Y{POSITION_Y} F6000
  G1 Z10 F600
  SHAPER_CALIBRATE
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

[gcode_macro TUNOFFINPUTSHAPER]
gcode:
  SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  END_PRINT
  CANCEL_PRINT_BASE

[gcode_macro M141]
description: Set Chamber Temperature with slicers
gcode:
  {% set s = params.S|float %}
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber_fan TARGET={s}
  { action_respond_info("Chamber target temperature: %s°C" % (s)) }

[gcode_macro M191]
description: Wait for Chamber Temperature to heat up
gcode:
  {% set s = params.S|float %}
  {% set chamber_temp = printer["temperature_sensor chamber_temp"].temperature|float %}
  {% if s > 0 %}
    M141 S{s}
  {% endif %}
  {% if s > chamber_temp and s <= 90 %}
    M140 S100
    { action_respond_info("Waiting for the bed to heat up the chamber...") }
    TEMPERATURE_WAIT SENSOR="temperature_fan chamber_fan" MINIMUM={s-1}
    { action_respond_info("Chamber target temperature reached: %s°C" % (s)) }
    M140 S{s}
  {% endif %}

[gcode_macro DATA_SAMPLE]
gcode:
  M106 S255
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MAXIMUM=40
  M106 S0
  G28
  G0 Z1
  M104 S250
  M140 S95
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data1
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MINIMUM=70
  CARTOGRAPHER_STREAM FILENAME=data1
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MAXIMUM=40
  M106 S0
  G28 Z0
  G0 Z2
  M104 S250
  M140 S95
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data2
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MINIMUM=70
  CARTOGRAPHER_STREAM FILENAME=data2
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MAXIMUM=40
  M106 S0
  G28 Z0
  G0 Z3
  M104 S250
  M140 S95
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data3
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MINIMUM=70
  CARTOGRAPHER_STREAM FILENAME=data3
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MAXIMUM=40
  M106 S0
  G28 Z0
  G0 Z5
  M104 S250
  M140 S95
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data4
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MINIMUM=70
  CARTOGRAPHER_STREAM FILENAME=data4
  M104 S0
  M140 S0
